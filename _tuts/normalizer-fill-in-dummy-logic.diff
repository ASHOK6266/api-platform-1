diff --git a/src/Entity/User.php b/src/Entity/User.php
index 1c42ebd..c686f81 100644
--- a/src/Entity/User.php
+++ b/src/Entity/User.php
@@ -85,7 +85,7 @@ class User implements UserInterface
 
     /**
      * @ORM\Column(type="string", length=50, nullable=true)
-     * @Groups({"admin:read", "user:write"})
+     * @Groups({"admin:read", "owner:read", "user:write"})
      */
     private $phoneNumber;
 
diff --git a/src/Serializer/Normalizer/UserNormalizer.php b/src/Serializer/Normalizer/UserNormalizer.php
index d6bab9a..78a409b 100644
--- a/src/Serializer/Normalizer/UserNormalizer.php
+++ b/src/Serializer/Normalizer/UserNormalizer.php
@@ -2,6 +2,7 @@
 
 namespace App\Serializer\Normalizer;
 
+use App\Entity\User;
 use Symfony\Component\Serializer\Normalizer\NormalizerInterface;
 use Symfony\Component\Serializer\Normalizer\ObjectNormalizer;
 
@@ -14,8 +15,15 @@ class UserNormalizer implements NormalizerInterface
         $this->normalizer = $normalizer;
     }
 
+    /**
+     * @param User $object
+     */
     public function normalize($object, $format = null, array $context = array()): array
     {
+        if ($this->userIsOwner($object)) {
+            $context['groups'][] = 'owner:read';
+        }
+
         $data = $this->normalizer->normalize($object, $format, $context);
 
         // Here: add, edit, or delete some data
@@ -25,6 +33,11 @@ class UserNormalizer implements NormalizerInterface
 
     public function supportsNormalization($data, $format = null): bool
     {
-        return $data instanceof \App\Entity\BlogPost;
+        return $data instanceof User;
+    }
+
+    private function userIsOwner(User $object)
+    {
+        return mt_rand(0, 10) > 5;
     }
 }
