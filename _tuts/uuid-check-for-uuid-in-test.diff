diff --git a/src/Entity/User.php b/src/Entity/User.php
index 368f41dd..1acf9fe1 100644
--- a/src/Entity/User.php
+++ b/src/Entity/User.php
@@ -11,6 +11,7 @@ use Doctrine\Common\Collections\ArrayCollection;
 use Doctrine\Common\Collections\Collection;
 use Doctrine\ORM\Mapping as ORM;
 use Ramsey\Uuid\Uuid;
+use Ramsey\Uuid\UuidInterface;
 use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;
 use Symfony\Component\Security\Core\User\UserInterface;
 use Symfony\Component\Serializer\Annotation\Groups;
@@ -293,4 +294,9 @@ class User implements UserInterface
     {
         $this->isMvp = $isMvp;
     }
+
+    public function getUuid(): UuidInterface
+    {
+        return $this->uuid;
+    }
 }
diff --git a/tests/Functional/UserResourceTest.php b/tests/Functional/UserResourceTest.php
index 842353bf..58610e39 100644
--- a/tests/Functional/UserResourceTest.php
+++ b/tests/Functional/UserResourceTest.php
@@ -23,6 +23,9 @@ class UserResourceTest extends CustomApiTestCase
 
         $user = UserFactory::repository()->findOneBy(['email' => 'cheeseplease@example.com']);
         $this->assertNotNull($user);
+        $this->assertJsonContains([
+            '@id' => '/api/users/'.$user->getUuid()->toString()
+        ]);
 
         $this->logIn($client, 'cheeseplease@example.com', 'brie');
     }
