diff --git a/config/services.yaml b/config/services.yaml
index 3bee7a40..289a6d37 100644
--- a/config/services.yaml
+++ b/config/services.yaml
@@ -52,3 +52,7 @@ services:
         bind:
             $collectionDataProvider: '@api_platform.doctrine.orm.default.collection_data_provider'
             $itemDataProvider: '@api_platform.doctrine.orm.default.item_data_provider'
+
+    App\DataProvider\DailyStatsProvider:
+        bind:
+            $filterLocator: '@api_platform.filter_locator'
diff --git a/src/DataProvider/DailyStatsProvider.php b/src/DataProvider/DailyStatsProvider.php
index 5d003ef1..38266040 100644
--- a/src/DataProvider/DailyStatsProvider.php
+++ b/src/DataProvider/DailyStatsProvider.php
@@ -11,18 +11,21 @@ use ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface;
 use App\Entity\DailyStats;
 use App\Repository\CheeseListingRepository;
 use App\Service\StatsHelper;
+use Psr\Container\ContainerInterface;
 
 class DailyStatsProvider implements CollectionDataProviderInterface, ItemDataProviderInterface, RestrictedDataProviderInterface
 {
     private $statsHelper;
     private $pagination;
     private $resourceMetadataFactory;
+    private $filterLocator;
 
-    public function __construct(StatsHelper $statsHelper, Pagination $pagination, ResourceMetadataFactoryInterface $resourceMetadataFactory)
+    public function __construct(StatsHelper $statsHelper, Pagination $pagination, ResourceMetadataFactoryInterface $resourceMetadataFactory, ContainerInterface $filterLocator)
     {
         $this->statsHelper = $statsHelper;
         $this->pagination = $pagination;
         $this->resourceMetadataFactory = $resourceMetadataFactory;
+        $this->filterLocator = $filterLocator;
     }
 
     public function getCollection(string $resourceClass, string $operationName = null)
@@ -37,7 +40,11 @@ class DailyStatsProvider implements CollectionDataProviderInterface, ItemDataPro
 
         $resourceMetadata = $this->resourceMetadataFactory->create($resourceClass);
         $resourceFilters = $resourceMetadata->getCollectionOperationAttribute($operationName, 'filters', [], true);
-        dd($resourceFilters);
+        foreach ($resourceFilters as $resourceFilter) {
+            $filterService = $this->filterLocator->get($resourceFilter);
+            dump($filterService);
+        }
+
         $paginator->setFromDate(new \DateTime('2020-08-30'));
 
         return $paginator;
