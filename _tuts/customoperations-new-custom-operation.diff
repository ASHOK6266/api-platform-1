diff --git a/src/Controller/CheeseListingController.php b/src/Controller/CheeseListingController.php
new file mode 100644
index 0000000..876f5fc
--- /dev/null
+++ b/src/Controller/CheeseListingController.php
@@ -0,0 +1,37 @@
+<?php
+
+namespace App\Controller;
+
+use App\Entity\CheeseListing;
+use Doctrine\Common\Persistence\ObjectManager;
+use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
+use Symfony\Component\Routing\Annotation\Route;
+
+class CheeseListingController extends AbstractController
+{
+
+    /**
+     * @Route(
+     *     name="publish_cheese_listing",
+     *     path="api/market/cheeses/{id}/publish",
+     *     methods={"PUT"},
+     *     defaults={
+     *       "_controller"="\App\Controller\CheeseListingController::publishCheeseListingToSocialMedia",
+     *       "_api_resource_class"="App\Entity\CheeseListing",
+     *       "_api_item_operation_name"="publishCheese"
+     *     }
+     *   )
+     */
+    public function publishCheeseListingToSocialMedia(CheeseListing $data, ObjectManager $manager): CheeseListing
+    {
+        if ($data->getPublished() === false) {
+            $data->publish();
+            $manager->persist($data);
+            $manager->flush();
+
+            // Image that we can publish a cheese advert to a social medium platform:
+            // $cheeseListingService->publishToFacebook($cheeseListing);
+        }
+        return $data;
+    }
+}
diff --git a/src/Entity/CheeseListing.php b/src/Entity/CheeseListing.php
index 834fd59..14d0aa7 100644
--- a/src/Entity/CheeseListing.php
+++ b/src/Entity/CheeseListing.php
@@ -33,6 +33,19 @@ use Doctrine\ORM\Mapping as ORM;
  *          },
  *          "delete"={
  *              "path"="/cheeses/{id}"
+ *          },
+ *          "publishCheese"={
+ *              "route_name"="publish_cheese_listing",
+ *              "swagger_context" = {
+ *                  "parameters" = {
+ *                      {
+ *                          "name" = "id",
+ *                          "in" = "path",
+ *                          "required" = "true",
+ *                          "type" = "string"
+ *                      }
+ *                  }
+ *              }
  *          }
  *     },
  *     subresourceOperations={
@@ -85,9 +98,15 @@ class CheeseListing
      */
     private $cheeseType;
 
+    /**
+     * @ORM\Column(type="boolean")
+     */
+    private $published;
+
     public function __construct()
     {
         $this->createdAt = new \DateTime();
+        $this->published = false;
     }
 
     public function getId(): ?int
@@ -157,4 +176,15 @@ class CheeseListing
         $this->cheeseType = $cheeseType;
         return $this;
     }
+
+    public function getPublished(): ?bool
+    {
+        return $this->published;
+    }
+
+    public function publish(): self {
+        $this->published = true;
+
+        return $this;
+    }
 }
diff --git a/src/Migrations/Version20190305143701.php b/src/Migrations/Version20190305143701.php
new file mode 100644
index 0000000..168dacb
--- /dev/null
+++ b/src/Migrations/Version20190305143701.php
@@ -0,0 +1,35 @@
+<?php
+
+declare(strict_types=1);
+
+namespace DoctrineMigrations;
+
+use Doctrine\DBAL\Schema\Schema;
+use Doctrine\Migrations\AbstractMigration;
+
+/**
+ * Auto-generated Migration: Please modify to your needs!
+ */
+final class Version20190305143701 extends AbstractMigration
+{
+    public function getDescription() : string
+    {
+        return '';
+    }
+
+    public function up(Schema $schema) : void
+    {
+        // this up() migration is auto-generated, please modify it to your needs
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+
+        $this->addSql('ALTER TABLE cheese_listing ADD published TINYINT(1) NOT NULL');
+    }
+
+    public function down(Schema $schema) : void
+    {
+        // this down() migration is auto-generated, please modify it to your needs
+        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
+
+        $this->addSql('ALTER TABLE cheese_listing DROP published');
+    }
+}
