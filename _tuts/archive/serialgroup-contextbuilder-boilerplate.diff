diff --git a/config/services.yaml b/config/services.yaml
index 10bca7d..9f1c381 100644
--- a/config/services.yaml
+++ b/config/services.yaml
@@ -26,3 +26,8 @@ services:
 
     # add more service definitions when explicit configuration is needed
     # please note that last definitions always *replace* previous ones
+
+    'App\Serializer\CheeseListingContextBuilder':
+        decorates: 'api_platform.serializer.context_builder'
+        arguments: [ '@App\Serializer\CheeseListingContextBuilder.inner' ]
+        autoconfigure: false
diff --git a/src/Serializer/CheeseListingContextBuilder.php b/src/Serializer/CheeseListingContextBuilder.php
new file mode 100644
index 0000000..d5d79fc
--- /dev/null
+++ b/src/Serializer/CheeseListingContextBuilder.php
@@ -0,0 +1,25 @@
+<?php
+
+namespace App\Serializer;
+
+use ApiPlatform\Core\Serializer\SerializerContextBuilderInterface;
+use Symfony\Component\HttpFoundation\Request;
+use Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface;
+
+final class CheeseListingContextBuilder implements SerializerContextBuilderInterface
+{
+    private $decorated;
+    private $authorizationChecker;
+
+    public function __construct(SerializerContextBuilderInterface $decorated, AuthorizationCheckerInterface $authorizationChecker)
+    {
+        $this->decorated = $decorated;
+        $this->authorizationChecker = $authorizationChecker;
+    }
+
+    public function createFromRequest(Request $request, bool $normalization, ?array $extractedAttributes = null): array
+    {
+        $context = $this->decorated->createFromRequest($request, $normalization, $extractedAttributes);
+        return $context;
+    }
+}
