diff --git a/src/Dto/CheeseListingInput.php b/src/Dto/CheeseListingInput.php
index 398e0734..be0f63a3 100644
--- a/src/Dto/CheeseListingInput.php
+++ b/src/Dto/CheeseListingInput.php
@@ -4,29 +4,42 @@ namespace App\Dto;
 
 use App\Entity\CheeseListing;
 use App\Entity\User;
+use App\Validator\IsValidOwner;
 use Symfony\Component\Serializer\Annotation\Groups;
 use Symfony\Component\Serializer\Annotation\SerializedName;
+use Symfony\Component\Validator\Constraints as Assert;
 
 class CheeseListingInput
 {
     /**
      * @var string
      * @Groups({"cheese:write", "user:write"})
+     * @Assert\NotBlank()
+     * @Assert\Length(
+     *     min=2,
+     *     max=50,
+     *     maxMessage="Describe your cheese in 50 chars or less"
+     * )
      */
     public $title;
 
     /**
      * @var int
      * @Groups({"cheese:write", "user:write"})
+     * @Assert\NotBlank()
      */
     public $price;
 
     /**
      * @var User
      * @Groups({"cheese:collection:post"})
+     * @IsValidOwner()
      */
     public $owner;
 
+    /**
+     * @Assert\NotBlank()
+     */
     public $description;
 
     public function createOrUpdateEntity(?CheeseListing $cheeseListing): CheeseListing
diff --git a/src/Entity/CheeseListing.php b/src/Entity/CheeseListing.php
index 7b1dde62..e917066a 100644
--- a/src/Entity/CheeseListing.php
+++ b/src/Entity/CheeseListing.php
@@ -10,10 +10,8 @@ use ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter;
 use ApiPlatform\Core\Serializer\Filter\PropertyFilter;
 use App\Dto\CheeseListingOutput;
 use App\Dto\CheeseListingInput;
-use App\Validator\IsValidOwner;
 use Carbon\Carbon;
 use Doctrine\ORM\Mapping as ORM;
-use Symfony\Component\Validator\Constraints as Assert;
 
 /**
  * @ApiResource(
@@ -67,18 +65,11 @@ class CheeseListing
 
     /**
      * @ORM\Column(type="string", length=255)
-     * @Assert\NotBlank()
-     * @Assert\Length(
-     *     min=2,
-     *     max=50,
-     *     maxMessage="Describe your cheese in 50 chars or less"
-     * )
      */
     private $title;
 
     /**
      * @ORM\Column(type="text")
-     * @Assert\NotBlank()
      */
     private $description;
 
@@ -86,7 +77,6 @@ class CheeseListing
      * The price of this delicious cheese, in cents
      *
      * @ORM\Column(type="integer")
-     * @Assert\NotBlank()
      */
     private $price;
 
@@ -103,7 +93,6 @@ class CheeseListing
     /**
      * @ORM\ManyToOne(targetEntity="App\Entity\User", inversedBy="cheeseListings")
      * @ORM\JoinColumn(nullable=false)
-     * @IsValidOwner()
      */
     private $owner;
 
